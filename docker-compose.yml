version: '3.9'

x-oauth: &oauth
  image: turnly/oauth:latest
  build:
    context: .
    dockerfile: Dockerfile

x-common-variables: &common-vars
  # This service shared env variables that extend from common.yml
  APP_NAME: oauth
  COOKIE_DOMAIN: ${APP_DOMAIN}
  AUTH_HOST: ${IAM_HOSTNAME}
  # ----------------------> WARNING: FOR DEVELOPMENT ONLY <----------------------
  LOG_LEVEL: debug
  INSECURE_COOKIE: 'true'
  # ----------------------> WARNING: FOR DEVELOPMENT ONLY <----------------------
  SCOPE: openid profile email
  COOKIE_NAME: __tly_x_forwarded_auth_data__
  USER_COOKIE_NAME: __tly_x_forwarded_auth_name__
  CSRF_COOKIE_NAME: __tly_x_forwarded_auth_csrf__
  CLAIMS_SESSION_NAME: __tly_x_forwarded_auth_claims__

services:
  oauth:
    <<: *oauth
    container_name: oauth
    command: "./oauth --rule.public.action=allow --rule.public.rule=\"PathPrefix(`${PREFIX_UNAUTHENTICATED_ROUTES}`)\""
    networks:
      turnly.network.public:
      turnly.network.internal:
        aliases:
          - oauth.turnly.local
    environment:
      <<: *common-vars
      PROVIDER_URI: ${OAUTH_OIDC_PROVIDER_URI}
      CLIENT_ID: ${OAUTH_OIDC_CLIENT_ID}
      CLIENT_SECRET: ${OAUTH_OIDC_CLIENT_SECRET}
      ENCRYPTION_KEY: ${OAUTH_ENCRYPTION_KEY}
      SECRET: ${OAUTH_SIGNING_KEY}
      URL_PATH: /_oauth
      LIFETIME: ${OAUTH_COOKIES_EXPIRES:-300} # The time in seconds
    labels:
      - traefik.enable=true
      - traefik.docker.network=turnly.network.internal

      - traefik.http.routers.oauth-public.entrypoints=web,websecure
      - traefik.http.routers.oauth-public.service=oauth-public
      - traefik.http.routers.oauth-public.rule=Host(`${IAM_HOSTNAME}`) && Path(`/_oauth`)
      - traefik.http.services.oauth-public.loadbalancer.server.port=4181

      # Adding OAuth-middleware to traefik
      - traefik.http.middlewares.oauth-middleware.forwardauth.address=http://oauth.turnly.local:4181
      - traefik.http.middlewares.oauth-middleware.forwardauth.authResponseHeaders=X-Forwarded-User, X-Forwarded-Host, X-Forwarded-For, X-Forwarded-Uri
      - traefik.http.middlewares.oauth-middleware.forwardauth.trustForwardHeader=true

      # Attach the OAuth-middleware to this service
      - traefik.http.routers.oauth-public.middlewares=oauth-middleware

  oauth-admin:
    <<: *oauth
    container_name: oauth-admin
    networks:
      turnly.network.public:
      turnly.network.internal:
        aliases:
          - oauth-admin.turnly.local
    environment:
      <<: *common-vars
      PROVIDER_URI: ${OAUTH_ADMIN_OIDC_PROVIDER_URI}
      CLIENT_ID: ${OAUTH_ADMIN_OIDC_CLIENT_ID}
      CLIENT_SECRET: ${OAUTH_ADMIN_OIDC_CLIENT_SECRET}
      ENCRYPTION_KEY: ${OAUTH_ADMIN_ENCRYPTION_KEY}
      SECRET: ${OAUTH_ADMIN_SIGNING_KEY}
      URL_PATH: /_oauth-admin
      LIFETIME: ${OAUTH_ADMIN_COOKIES_EXPIRES:-60} # The time in seconds
    labels:
      - traefik.enable=true
      - traefik.docker.network=turnly.network.internal

      - traefik.http.routers.oauth-admin-public.entrypoints=web,websecure
      - traefik.http.routers.oauth-admin-public.service=oauth-admin-public
      - traefik.http.routers.oauth-admin-public.rule=Host(`${IAM_HOSTNAME}`) && Path(`/_oauth-admin`)
      - traefik.http.services.oauth-admin-public.loadbalancer.server.port=4181

      # Adding OAuth-middleware to traefik
      - traefik.http.middlewares.oauth-admin-middleware.forwardauth.address=http://oauth-admin.turnly.local:4181
      - traefik.http.middlewares.oauth-admin-middleware.forwardauth.authResponseHeaders=X-Forwarded-User, X-Forwarded-Host, X-Forwarded-For, X-Forwarded-Uri
      - traefik.http.middlewares.oauth-admin-middleware.forwardauth.trustForwardHeader=true

      # Attach the OAuth-middleware to this service
      - traefik.http.routers.oauth-admin-public.middlewares=oauth-admin-middleware

networks:
  turnly.network.internal:
    name: turnly.network.internal
    external: true
  turnly.network.public:
    name: turnly.network.public
    external: true
